{"version":3,"file":"ledger-connector.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../src/subprovider.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","import { BaseWalletSubprovider } from \"@0x/subproviders/lib/src/subproviders/base_wallet_subprovider\"\nimport { PartialTxParams } from \"@0x/subproviders\"\nimport { Transaction } from \"ethereumjs-tx\"\nimport { WalletSubproviderErrors } from \"@0x/subproviders/lib/src/types\"\nimport { stripHexPrefix } from \"ethereumjs-util\"\nimport AppEth from \"@ledgerhq/hw-app-eth\"\nimport TransportHID from \"@ledgerhq/hw-transport-webhid\"\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\"\n\nconst getTransport = () => {\n  // web hid supported\n  if (\"hid\" in navigator) {\n    return TransportHID.create()\n  }\n  // try U2F\n  return TransportU2F.create()\n};\n\n/**\n * Subprovider for interfacing with a user's [Ledger Nano S](https://www.ledgerwallet.com/products/ledger-nano-s).\n * This subprovider intercepts all account related RPC requests (e.g message/transaction signing, etc...) and\n * re-routes them to a Ledger device plugged into the users computer.\n */\nexport class LedgerSubprovider extends BaseWalletSubprovider {\n  private readonly _networkId: number\n  private _baseDerivationPath: string\n  public selectedAccountIndex: number = 0\n\n  /**\n   * Instantiates a LedgerSubprovider. Defaults to derivationPath set to `44'/60'/x'`.\n   * TestRPC/Ganache defaults to `m/44'/60'/x'/0`, so set this in the configs if desired.\n   * @param config Several available configurations\n   * @return LedgerSubprovider instance\n   */\n  constructor({\n    networkId,\n    baseDerivationPath,\n  }: {\n    networkId: number\n    baseDerivationPath?: string\n  }) {\n    super()\n    this._networkId = networkId\n    this._baseDerivationPath = baseDerivationPath || \"m/44'/60'/x'/0\"\n  }\n  /**\n   * Retrieve the set derivation path\n   * @returns derivation path\n   */\n  public getPath(): string {\n    return this._baseDerivationPath\n  }\n  /**\n   * Set a desired derivation path when computing the available user addresses\n   * @param basDerivationPath The desired derivation path (e.g `44'/60'/0'`)\n   */\n  public setPath(basDerivationPath: string): void {\n    this._baseDerivationPath = basDerivationPath\n  }\n  /**\n   * Retrieve a users Ledger accounts. The accounts are derived from the derivationPath,\n   * master public key and chain code. Because of this, you can request as many accounts\n   * as you wish and it only requires a single request to the Ledger device. This method\n   * is automatically called when issuing a `eth_accounts` JSON RPC request via your providerEngine\n   * instance.\n   * @param numberOfAccounts Number of accounts to retrieve (default: 10)\n   * @param from\n   * @return An array of accounts\n   */\n  public async getAccountsAsync(\n    numberOfAccounts: number = 10,\n    from: number = 0,\n  ): Promise<string[]> {\n    const addresses = []\n    let transport = await getTransport()\n    try {\n      const eth = new AppEth(transport)\n      for (let i = from; i < from + numberOfAccounts; i++) {\n        const path = this._baseDerivationPath.replace(\"x\", String(i))\n        const info = await eth.getAddress(path, false, true)\n        addresses.push(info.address)\n      }\n    } catch (e) {\n      throw e;\n    } finally {\n      await transport.close()\n    }\n    return addresses\n  }\n\n  /**\n   * Signs a transaction on the Ledger with the account specificed by the `from` field in txParams.\n   * If you've added the LedgerSubprovider to your app's provider, you can simply send an `eth_sendTransaction`\n   * JSON RPC request, and this method will be called auto-magically. If you are not using this via a ProviderEngine\n   * instance, you can call it directly.\n   * @param txParams Parameters of the transaction to sign\n   * @return Signed transaction hex string\n   */\n  public async signTransactionAsync(txParams: PartialTxParams): Promise<string> {\n    const path = this._baseDerivationPath.replace(\"x\", this.selectedAccountIndex.toString())\n    if (!path) throw new Error(\"address unknown '\" + txParams.from + \"'\")\n    let transport = await getTransport()\n    try {\n      const eth = new AppEth(transport)\n      const tx = new Transaction(txParams, { chain: this._networkId })\n\n      // Set the EIP155 bits\n      tx.raw[6] = Buffer.from([this._networkId]) // v\n      tx.raw[7] = Buffer.from([]) // r\n      tx.raw[8] = Buffer.from([]) // s\n\n      // Pass hex-rlp to ledger for signing\n      const result = await eth.signTransaction(path, tx.serialize().toString(\"hex\"))\n\n      // Store signature in transaction\n      tx.v = Buffer.from(result.v, \"hex\")\n      tx.r = Buffer.from(result.r, \"hex\")\n      tx.s = Buffer.from(result.s, \"hex\")\n\n      // EIP155: v should be chain_id * 2 + {35, 36}\n      const signedChainId = Math.floor((tx.v[0] - 35) / 2)\n      const validChainId = this._networkId & 0xff; // FIXME this is to fixed a current workaround that app don't support > 0xff\n      if (signedChainId !== validChainId) {\n        throw LedgerSubprovider.makeError(\n          \"Invalid networkId signature returned. Expected: \" +\n            this._networkId +\n            \", Got: \" +\n            signedChainId,\n          \"InvalidNetworkId\",\n        )\n      }\n\n      return `0x${tx.serialize().toString(\"hex\")}`\n    } finally {\n      await transport.close()\n    }\n  }\n\n  private static makeError(msg: string | undefined, id: string) {\n    const err = new Error(msg)\n    // @ts-ignore\n    err.id = id\n    return err\n  }\n\n  /**\n   * Sign a personal Ethereum signed message. The signing account will be the account\n   * associated with the provided address.\n   * The Ledger adds the Ethereum signed message prefix on-device.  If you've added\n   * the LedgerSubprovider to your app's provider, you can simply send an `eth_sign`\n   * or `personal_sign` JSON RPC request, and this method will be called auto-magically.\n   * If you are not using this via a ProviderEngine instance, you can call it directly.\n   * @param data Hex string message to sign\n   * @param address Address of the account to sign with\n   * @return Signature hex string (order: rsv)\n   */\n  public async signPersonalMessageAsync(data: string, address: string): Promise<string> {\n    const path = this._baseDerivationPath.replace(\"x\", this.selectedAccountIndex.toString())\n    if (!path) throw new Error(\"address unknown '\" + address + \"'\")\n    let transport = await getTransport()\n    try {\n      const eth = new AppEth(transport)\n      const result = await eth.signPersonalMessage(path, stripHexPrefix(data))\n      const v = parseInt(result.v.toString(), 10) - 27\n      let vHex = v.toString(16)\n      if (vHex.length < 2) {\n        vHex = `0${v}`\n      }\n      return `0x${result.r}${result.s}${vHex}`\n    } finally {\n      await transport.close()\n    }\n  }\n  /**\n   * eth_signTypedData is currently not supported on Ledger devices.\n   * @return Signature hex string (order: rsv)\n   */\n  public async signTypedDataAsync(): Promise<string> {\n    throw new Error(WalletSubproviderErrors.MethodNotSupported)\n  }\n}\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport Web3ProviderEngine from 'web3-provider-engine'\nimport CacheSubprovider from 'web3-provider-engine/subproviders/cache.js'\nimport { RPCSubprovider } from '@0x/subproviders/lib/src/subproviders/rpc_subprovider' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { LedgerSubprovider } from './subprovider'\n\ninterface LedgerConnectorArguments {\n  chainId: number\n  url: string\n  pollingInterval?: number\n  requestTimeoutMs?: number\n  accountFetchingConfigs?: any\n  baseDerivationPath?: string\n}\n\nexport class LedgerConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly url: string\n  private readonly pollingInterval?: number\n  private readonly requestTimeoutMs?: number\n  private baseDerivationPath?: string\n\n  private provider: any\n\n  constructor({\n    chainId,\n    url,\n    pollingInterval,\n    requestTimeoutMs,\n    baseDerivationPath\n  }: LedgerConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.url = url\n    this.pollingInterval = pollingInterval\n    this.requestTimeoutMs = requestTimeoutMs\n    this.baseDerivationPath = baseDerivationPath\n  }\n\n  public async activate(baseDerivationPath?: string): Promise<ConnectorUpdate> {\n    if(baseDerivationPath) {\n      this.baseDerivationPath = baseDerivationPath\n    }\n\n    if (!this.provider) {\n      const engine = new Web3ProviderEngine({ pollingInterval: this.pollingInterval })\n      engine.addProvider(\n        new LedgerSubprovider({\n          networkId: this.chainId,\n          baseDerivationPath: this.baseDerivationPath\n        })\n      )\n      engine.addProvider(new CacheSubprovider())\n      engine.addProvider(new RPCSubprovider(this.url, this.requestTimeoutMs))\n      this.provider = engine\n    }\n\n    this.provider.start()\n\n    return { provider: this.provider, chainId: this.chainId }\n  }\n\n  public async getProvider(): Promise<Web3ProviderEngine> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.chainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return (await this.provider._providers[0].getAccountsAsync(1, this.getAccountIndex()))[0]\n  }\n\n  public async getAccounts(page: number = 1): Promise<string[]> {\n    const perPage = 5\n    return (await this.provider._providers[0].getAccountsAsync(perPage, (page-1)*perPage))\n  }\n\n  public getAccountIndex(): number {\n    const provider: LedgerSubprovider = this.provider._providers[0]\n    return provider.selectedAccountIndex\n  }\n\n  public async setAccountIndex(index: number): Promise<string> {\n    this.provider._providers[0].selectedAccountIndex = index\n    const address = (await this.provider._providers[0].getAccountsAsync(1, index))[0]\n    this.emitUpdate({account:address})\n    return address\n  }\n\n  public deactivate() {\n    this.provider.stop()\n  }\n}\n"],"names":["global","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","runtime","regeneratorRuntime","module","exports","wrap","ContinueSentinel","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","next","then","result","done","value","toString","keys","object","key","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","undefined","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","generator","_invoke","state","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","doneResult","Function","g","hadRuntime","getOwnPropertyNames","indexOf","oldRuntime","require$$0","e","getTransport","navigator","TransportHID","TransportU2F","LedgerSubprovider","networkId","baseDerivationPath","_networkId","_baseDerivationPath","getPath","setPath","basDerivationPath","getAccountsAsync","numberOfAccounts","from","addresses","transport","eth","AppEth","path","replace","String","getAddress","address","close","signTransactionAsync","txParams","selectedAccountIndex","tx","Transaction","chain","raw","Buffer","signTransaction","serialize","v","r","s","signedChainId","Math","floor","makeError","msg","id","signPersonalMessageAsync","data","signPersonalMessage","stripHexPrefix","parseInt","vHex","signTypedDataAsync","WalletSubproviderErrors","MethodNotSupported","BaseWalletSubprovider","chainId","url","pollingInterval","requestTimeoutMs","supportedChainIds","activate","provider","engine","Web3ProviderEngine","addProvider","CacheSubprovider","RPCSubprovider","start","getProvider","getChainId","getAccount","_providers","getAccountIndex","getAccounts","page","setAccountIndex","index","emitUpdate","account","deactivate","AbstractConnector"],"mappings":"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"}